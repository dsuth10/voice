# Task ID: 13
# Title: Create Installation Package and Deployment Process
# Status: pending
# Dependencies: 1, 9, 10, 11, 12
# Priority: medium
# Description: Develop an installation package and deployment process for easy distribution and installation of the application.
# Details:
Implement a deployment system that:

1. Creates a standalone Windows executable
   - Use PyInstaller to package the application
   - Include all required dependencies
   - Optimize package size by excluding unnecessary files

2. Creates an installer with proper Windows integration
   - Use NSIS (Nullsoft Scriptable Install System) for creating the installer
   - Add Start Menu shortcuts
   - Register for automatic startup (optional)
   - Create uninstaller

3. Implements automatic updates
   - Check for updates on startup
   - Download and apply updates in the background
   - Notify user of available updates

Implementation approach:
```python
# PyInstaller spec file (voice_dictation.spec)

# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['main.py'],
    pathex=[],
    binaries=[],
    datas=[
        ('resources/*.png', 'resources'),
        ('resources/*.ico', 'resources'),
    ],
    hiddenimports=[
        'pyaudio',
        'assemblyai',
        'openai',
        'pywin32',
        'pyautogui',
        'pygetwindow',
        'pyperclip',
        'pystray',
        'PIL',
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='VoiceDictationAssistant',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
    icon='resources/app_icon.ico',
)
```

```nsi
# NSIS Installer Script

!define APPNAME "Voice Dictation Assistant"
!define COMPANYNAME "YourCompany"
!define DESCRIPTION "AI-powered voice dictation for Windows"
!define VERSIONMAJOR 1
!define VERSIONMINOR 0
!define VERSIONBUILD 0

# Define installer name
OutFile "VoiceDictationAssistant-Setup-${VERSIONMAJOR}.${VERSIONMINOR}.${VERSIONBUILD}.exe"

# Default installation directory
InstallDir "$PROGRAMFILES\${COMPANYNAME}\${APPNAME}"

# Request application privileges
RequestExecutionLevel admin

# Interface Settings
Name "${APPNAME}"
!include "MUI2.nsh"
!define MUI_ICON "resources\app_icon.ico"

# Pages
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_LICENSE "LICENSE.txt"
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH

# Uninstaller pages
!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES

# Languages
!insertmacro MUI_LANGUAGE "English"

# Installer sections
Section "Install"
    SetOutPath $INSTDIR
    
    # Files to install
    File /r "dist\VoiceDictationAssistant\*.*"
    
    # Create uninstaller
    WriteUninstaller "$INSTDIR\uninstall.exe"
    
    # Start Menu shortcuts
    CreateDirectory "$SMPROGRAMS\${COMPANYNAME}"
    CreateShortcut "$SMPROGRAMS\${COMPANYNAME}\${APPNAME}.lnk" "$INSTDIR\VoiceDictationAssistant.exe"
    CreateShortcut "$SMPROGRAMS\${COMPANYNAME}\Uninstall ${APPNAME}.lnk" "$INSTDIR\uninstall.exe"
    
    # Registry information for Add/Remove Programs
    WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "DisplayName" "${APPNAME}"
    WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "UninstallString" "$\"$INSTDIR\uninstall.exe$\""
    WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "DisplayIcon" "$\"$INSTDIR\VoiceDictationAssistant.exe$\""
    WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "Publisher" "${COMPANYNAME}"
    WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "DisplayVersion" "${VERSIONMAJOR}.${VERSIONMINOR}.${VERSIONBUILD}"
    
    # Optional: Register for automatic startup
    WriteRegStr HKCU "Software\Microsoft\Windows\CurrentVersion\Run" "${APPNAME}" "$\"$INSTDIR\VoiceDictationAssistant.exe$\""
SectionEnd

# Uninstaller section
Section "Uninstall"
    # Remove files and directories
    Delete "$INSTDIR\*.*"
    RMDir /r "$INSTDIR"
    
    # Remove shortcuts
    Delete "$SMPROGRAMS\${COMPANYNAME}\${APPNAME}.lnk"
    Delete "$SMPROGRAMS\${COMPANYNAME}\Uninstall ${APPNAME}.lnk"
    RMDir "$SMPROGRAMS\${COMPANYNAME}"
    
    # Remove registry entries
    DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}"
    DeleteRegValue HKCU "Software\Microsoft\Windows\CurrentVersion\Run" "${APPNAME}"
SectionEnd
```

Implement a build script to automate the packaging process. Add digital signing for the installer to improve security and user trust.

# Test Strategy:
1. Test installation on clean Windows 10 and 11 systems
2. Verify all dependencies are properly included
3. Test Start Menu shortcuts and uninstaller
4. Verify automatic startup option works correctly
5. Test update mechanism with simulated new versions
6. Verify installer size is optimized
7. Test installation with different user permission levels
8. Verify uninstallation removes all application files and registry entries
